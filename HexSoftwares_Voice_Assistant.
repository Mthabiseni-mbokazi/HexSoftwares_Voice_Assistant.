# -*- coding: utf-8 -*-
"""
Created on Tue Feb 15 20:40:30 2025

@author: mthabiseni mbokazi
"""

import speech_recognition as sr
import pyttsx3
import datetime
import webbrowser
import os
import wikipediaapi
import random
import requests

# Initialize speech engine
engine = pyttsx3.init()
voices = engine.getProperty('voices')
engine.setProperty('voice', voices[2].id)  # the vooce can be changed the here (This is from the Microsift)

# Initialize speech recognizer
r = sr.Recognizer()

def speak(text):
    engine.say(text)
    engine.runAndWait()
speak('Hex Software Project 2')

def wishMe():
    hour = int(datetime.datetime.now().hour)
    if 0 <= hour < 12:
        speak("Good Morning!")
    elif 12 <= hour < 18:
        speak("Good Afternoon!")
    else:
        speak("Good Evening!")
    speak("I am Hexa your voice assistant. How can I help you?")

def takeCommand():
    with sr.Microphone() as source:
        print("Listening...")
        r.pause_threshold = 3  # This is a listening threshold, can be adjusted for better listening
        audio = r.listen(source)

    try:
        query = r.recognize_google(audio, language='en-in')  #this uses english language, hence en
        print(f"User said: {query}\n")
    except Exception as e:
        print(e)
        print("Say that again please...")
        speak("Say that again please...")
        return "None"
    return query

def searchWikipedia(query):
    speak("Searching Wikipedia...")
    user_agent = 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.150 Safari/537.36'
    wiki_wiki = wikipediaapi.Wikipedia(language='en', user_agent=user_agent)
    page = wiki_wiki.page(query)
    if page.exists():
        speak("According to Wikipedia, ")
        speak(page.summary[:2000])  # Return up to 2000 characters of the summary
    else:
        speak("Sorry, I couldn't find any information on Wikipedia for your query.")

def get_weather(city_name, api_key): #replace with the actual api_key API key from Openweather website
    base_url = "http://api.openweathermap.org/data/2.5/weather?"
    complete_url = base_url + "appid=" + api_key + "&q=" + city_name
    response = requests.get(complete_url)
    weather_data = response.json()

    if weather_data.get("cod") != 404:
        main_data = weather_data.get("main", {})
        current_temperature = main_data.get("temp", "N/A")
        current_pressure = main_data.get("pressure", "N/A")
        current_humidity = main_data.get("humidity", "N/A")
        weather_description = weather_data.get("weather", [{}])[0].get("description", "N/A")

        weather_info = f"Temperature: {current_temperature - 273.15:.2f}Â°C\n" if current_temperature != "N/A" else "Temperature: N/A\n"
        weather_info += f"Atmospheric Pressure: {current_pressure} hPa\n" if current_pressure != "N/A" else "Atmospheric Pressure: N/A\n"
        weather_info += f"Humidity: {current_humidity}%\n" if current_humidity != "N/A" else "Humidity: N/A\n"
        weather_info += f"Description: {weather_description}"

        speak("Here is the weather update:")
        speak(weather_info)
        print(weather_info)
    else:
        speak("City not found!")

def get_time():
    now = datetime.datetime.now()
    current_time = now.strftime("%H:%M:%S")
    speak(f"The current time is {current_time}")

if __name__ == "__main__":
    wishMe()
    api_key = 'api_key'  #This is a Weather API key to get waether update from any city(REPLACE THE WITH YOUR API KEY)
    while True:
        query = takeCommand().lower()

        # Logic for executing tasks based on user commands
        if query == "none":
            continue

        if 'exit' in query:
            hour = int(datetime.datetime.now().hour)
            if 0 <= hour < 12:
                speak("Goodbye, Enjoy the Rest of Your day!")
            elif 12 <= hour < 18:
                speak("Goodbye, Enjoy your afternoon!")
            else:
                speak("Goodbye, Enjoy your Evening!")
            break

        if 'open youtube' in query:
            speak("Playing the song from YouTube...")
            search_keyword = query.replace("play", "").strip()
            webbrowser.open(f"https://www.youtube.com/results?search_query={search_keyword}")

        elif 'play music' in query or 'play songs' in query:
            music_dir = 'C:/Users/mthab/Music'  #music directory
            songs = os.listdir(music_dir)
            random_song = random.choice(songs)  #a random song is chosen on 
            os.startfile(os.path.join(music_dir, random_song))  # Plays the random song

        elif 'weather' in query:
            city_name = query.replace("weather in", "").strip()
            get_weather(city_name, api_key) #replace 'api_key' with your API key

        elif 'wikipedia' in query or 'who is' or 'what is':
            search_query = query.replace("wikipedia", "").replace("who is", "").replace("what is", "").strip()
            searchWikipedia(search_query)


